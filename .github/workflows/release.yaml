name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build and Publish
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        dotnet-version: ["7.0.x"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore PoliAuthInstaller.sln

      - name: Build
        run: dotnet build --configuration Release --no-restore PoliAuthInstaller.sln

      - name: Publish Windows self-contained EXE
        if: matrix.os == 'windows-latest'
        run: dotnet publish --configuration Release --no-build --runtime win-x64 --output ./publish PoliAuthInstaller.sln

      - name: Publish Linux DLL
        if: matrix.os == 'ubuntu-latest'
        run: |
          dotnet publish --configuration Release --runtime linux-x64 --output ./publish --self-contained true PoliAuth_Installer.csproj
          mv publish/PoliAuth_Installer publish/PoliAuth_Installer.dll

      - name: Upload EXE artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: exe-windows
          path: ./publish/*.exe

      - name: Upload DLL artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: dll-linux
          path: ./publish/*.dll

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download EXE artifact (Windows)
        uses: actions/download-artifact@v2
        with:
          name: exe-windows
          path: ./artifacts/exe-windows

      - name: Download DLL artifact (Linux)
        uses: actions/download-artifact@v2
        with:
          name: dll-linux
          path: ./artifacts/dll-linux

      - name: Create Release
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          gh release create $TAG_NAME \
          ./artifacts/exe-windows/*.exe \
          ./artifacts/dll-linux/*.dll \
          --title "Release $TAG_NAME" \
          --notes "New release of the project. Please find the artifacts attached below."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
